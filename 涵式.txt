
#include <stido.h>
int main()
{
    //宣告單元
    int a;
    int b;
    int sum;

    //輸入單元
    a = 30;
    b = 50;

    //邏輯運算單元
    sum = a + b;

    輸出單元
    printf("%d\n",sum);

}

      "控制單元"

      [宣告單元]
      [輸入單元]
main :[邏輯單元]   ===> "函數四架構"   ===> "系統化功能"
      [輸出單元]
      [儲存單元]



目的: 
1.功能整理
2.系統化程式
3.C函數庫設計
4.MCU函數庫設計
5.DLL檔設計   "Java/Python/C++"
6.使用各領域內 內建函數功能




函數架構1: "無 參數無回傳值"
void 函數名稱()
{
    "[程式區塊]"
}
使用方式
"  函數名稱();  "


函數架構2: "有 參數無回傳值"
void 函數名稱(參數1,參數2)
{
    "[程式區塊]"
}
使用方式
" 函數名稱(引數1,引數2); "




函數架構3: "無 參數 有回傳值"
資料型態 函數名稱()
{
    "[程式區塊]"
    return (資料值);
}
使用方式
"資料型態 x = 函數名稱(參數1,參數2); "



函數架構4: "有 參數 有回傳值"

int/char/float/byte
資料型態 函數名稱(參數1,參數2)
{
    "[程式區塊]"
    return (資料值);
}
使用方式
"資料型態 x = 函數名稱(參數1,參數2); "


架構4 : 架構2 + 架構3
(1)邏輯元件
(2)Library

輸入 ==>元件  >>輸出
        函式

ex: strcmp(字串1,字串2);
0==>正確  -1==>不正確